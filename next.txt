how to make protocol trait functions take in data better

more pressing:
should requests be sent without directly awaiting a response?
should that stream stay open? or should the peer responding re-dial
the requesting peer each time? (so that the requester doesnt have to block)
then each request/response pair will be given an ID to keep track of which
response corresponds to which request
answer: keep streams open. much simpler for now

Next up
[ ] Logging
[ ] Implement PeerId hashes
[X] Clean up code
[X] Rename `Client` to `Transport`
[ ] Implement the rest of the network behavior
[ ] Write RPC server
[ ] Add pub/priv keys, digital signatures, and authentication
[ ] Refactor result type to include PeerId from sender. use c-style
    embedded enum
[ ] Add last_seen functionality
